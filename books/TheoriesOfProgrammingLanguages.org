#+TITLE: Theories Of Programming Languages
#+AUTHOR:John C. Reynolds

#+EXPORT_FILE_NAME: ../latex/TheoriesOfProgrammingLanguages/TheoriesOfProgrammingLanguages.tex
#+LATEX_HEADER: \graphicspath{{../../books/}}
#+LATEX_HEADER: \input{preamble.tex}

#+LATEX_HEADER: \usepackage{syntax}
#+LATEX_HEADER: \makeindex
#+LATEX_HEADER: \def \rem {\textbf{rem}}
#+LATEX_HEADER: \def \true {\textbf{true}}
#+LATEX_HEADER: \def \false {\textbf{false}}
#+LATEX_HEADER: \def \skip {\textbf{skip}}
#+LATEX_HEADER: \def \if {\textbf{if}}
#+LATEX_HEADER: \def \then {\textbf{then}}
#+LATEX_HEADER: \def \else {\textbf{else}}
#+LATEX_HEADER: \def \while {\textbf{while}}
#+LATEX_HEADER: \def \do {\textbf{do}}
* Predicate Logic
** Abstract Syntax

* The Simple Imperative Language

** Syntax
   \begin{grammar}
   <intexp> ::= 0 | 1 |  2 | \(\cdots\)
   \alt <var>  |  - <intexp> | <intexp> + <intexp> | <intexp> -  <intexp>
   \alt <intexp> \(\times\) <intexp> | <intexp> \(\div\) <intexp> | <intexp> \rem <intexp>

   <boolexp> ::= \true | \false
   \alt <intexp> = <intexp> | <intexp> \(\neq\) <intexp> | <intexp> < <intexp>
   \alt <intexp> \(\le\) <intexp> | <intexp> > <intexp> | <intexp> \(\ge\) <intexp>
   \alt \(\neg\)  <boolexp> | <boolexp> \(\wedge\) <boolexp> | <boolexp> \(\vee\) <boolexp>
   \alt <boolexp> \(\Rightarrow\) <boolexp> | <boolexp> \(\Leftrightarrow\) <boolexp>

   <comm> ::= <var> := <intexp> | \skip | <comm> ; <comm>
   \alt \if <boolexp> \then <comm> \else <comm>
   \alt \while <boolexp> \do <comm>
   \end{grammar}
