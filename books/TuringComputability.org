#+TITLE: Turing Computability: Theory and Applications 
#+AUTHOR: Robert I. Soare
#+LATEX_HEADER: \input{../preamble.tex}
#+EXPORT_FILE_NAME: ../latex/TuringComputability/TuringComputability.tex
* Defining Computability
** The Obstacle of Diagonalization and Partial Functions
   To characterize the effiectively calculable functions we would like to produce a list
   \(\calc=\{f_n\}_{n\in\omega}\) of functions with three properties:
   1. the list \(\{f_n\}_{n\in\omega}\) includes all and only algorithmically computable functions
   2. there is a uniformly effiective listing of them, namely an algorithmically computable function
      \(g(n,x)=f_n(x)\)
   3. every \(f_n\) is a total function


   However these three conditions are contradictory because we can define the *diagonal function*
   \(h(x)=g(x,x)+1\not\in\calc\) .

   Hence we must abandon one of the three conditions
** Turing Defines Effectively Calculable
